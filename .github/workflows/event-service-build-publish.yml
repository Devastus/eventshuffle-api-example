# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build, test and publish Event Service to GCR

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  IMAGE: event-service

on:
  push:
    branches: [ master ]
    paths: [ "event-service/**" ]
  pull_request:
    branches: [ master ]
    paths: [ "event-service/**" ]

jobs:
  event-service-build-publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install NPM packages
      working-directory: event-service
      run: npm ci

    - name: Run linter
      working-directory: event-service
      run: npm run lint

    - name: Run unit tests
      working-directory: event-service
      run: npm run test:unit

    - name: Build project
      working-directory: event-service
      run: npm run build --if-present

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    - name: Build Docker image
      working-directory: event-service
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    - name: Publish Docker image
      working-directory: event-service
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    - name: Dispatch 'Deploy project to GKE'
      uses: benc-uk/workflow-dispatch@v1.1
      with:
        # Name or ID of workflow to run
        workflow: "Deploy project to GKE"
        # GitHub token with repo write access, can NOT use secrets.GITHUB_TOKEN, see readme
        token: ${{ secrets.PERSONAL_TOKEN }}
        # Inputs to pass to the workflow, must be a JSON string
        inputs: "{\"image_name\": \"${{ env.IMAGE }}\", \"image_sha\": \"${{ github.sha }}\"}"
        # The reference of the workflow run. The reference can be a branch, tag, or a commit SHA
        # ref: # optional
        # Repo owner & name, slash separated, only set if invoking a workflow in a different repo
        # repo: # optional

# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build, test and deploy Event Service to GKE

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: my-first-cluster-1    # TODO: update to cluster name
  GKE_ZONE: europe-north1-a  # TODO: update to cluster zone
  DEPLOYMENT_NAME: eventshuffle-api # TODO: update to deployment name
  IMAGE: event-service

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  event-service-build-test-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install NPM packages
      working-directory: event-service
      run: npm ci

    - name: Run linter
      working-directory: event-service
      run: npm run lint

    - name: Run unit tests
      working-directory: event-service
      run: npm run test:unit

    - name: Build project
      working-directory: event-service
      run: npm run build --if-present

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    - name: Build Docker image
      working-directory: event-service
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    - name: Publish Docker image
      working-directory: event-service
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    - name: Set up Kustomize
      working-directory: deployment
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    - name: Deploy to GKE
      working-directory: deployment
      run: |-
        kubectl create secret generic mariadb-secrets --from-literal=MYSQL_ROOT_PASSWORD=${{ secrets.DB_PASSWORD }}
        kubectl create secret generic event-service-secrets --from-literal=DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

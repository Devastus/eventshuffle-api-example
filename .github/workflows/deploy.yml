name: Deploy project to GKE

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: my-first-cluster-1
  GKE_ZONE: europe-north1-a
  DEPLOYMENT_NAME: eventshuffle-api

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      image_name:
        description: "Name/Repository of the Docker image to deploy"
        default: "event-service"
        required: true
      image_sha:
        description: "SHA tag of the Docker image to deploy"
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  deploy-gke:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    # - working-directory: deployment
    #   run: |-
    #     gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - working-directory: deployment
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    - name: Set up Kustomize
      working-directory: deployment
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    - name: Deploy to GKE
      working-directory: deployment
      run: |-
        kubectl create secret generic mariadb-secrets --from-literal=MYSQL_ROOT_PASSWORD=${{ secrets.DB_PASSWORD }} > /dev/null 2>&1 || true
        kubectl create secret generic event-service-secrets --from-literal=DB_PASSWORD=${{ secrets.DB_PASSWORD }} > /dev/null 2>&1 || true
        kubectl create configmap nginx-configmap --from-file nginx.conf > /dev/null 2>&1 || true
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/${{ github.event.inputs.image_name }}:${{ github.event.inputs.image_sha }}
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
